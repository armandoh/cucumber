apply plugin: 'java'

sourceCompatibility = 1.7
version = '1.0'

repositories {
    mavenCentral()
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava

    file("build/json/").mkdirs()
    file("build/xml/").mkdirs()


    doLast {

        def argList = [
                '--format', 'pretty',
                "--format", "html:${buildDir}/cucumber/html/",
                "--format", "json:${buildDir}/cucumber/json/cucumber.json",
                "--format", "junit:${buildDir}/cucumber/xml/cucumber.xml",
                "--glue", "com/test/cuke",
                "src/test/resources/cuke/"
        ]

        /**
         * tags is a String that contains elements that will go directly into the argList.
         *
         * eg:
         * ./gradlew -PadditionalArgs="--tags @foo,@bar --tags @baz --tags @qux"
         *
         * would result in these parameters
         *   --tags @foo,@bar
         *   --tags @baz
         *   --tags @qux
         */
        if (project.hasProperty('additionalArgs') && additionalArgs instanceof String) {
            def argString = (String) additionalArgs;
            argList.addAll(argString.split(" "))
        }

        def allFeaturesDir = "${sourceSets.test.resources.srcDirs.iterator().next()}/cuke/"
        def featureToRun = project.hasProperty('feature') ? allFeaturesDir.plus(feature) : allFeaturesDir

        argList.add(featureToRun)


        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output + sourceSets.main.runtimeClasspath
            args = argList

        }
    }
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    testCompile group: 'info.cukes', name: 'cucumber-java',  version: '1.1.8'
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: '1.1.8'
}

defaultTasks = ['clean', 'build', 'cucumber']
